### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    selection = self.selection;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "448eb8eb91b9e5db70daeb6fff52877ff6d72791";
          sha256 = "1653jc4886z7spwkbfpblrjjwsfbwd0xzggrmrxfjps5a1zwi88q";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
in
{
  format-version = 4;
  inherit repos;
  ocaml-version = "4.11.2";
  selection = 
  {
    base-bytes = 
    {
      pname = "base-bytes";
      version = "base";
      src = null;
      opamInputs = {
                     inherit (selection) ocamlfind ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-bytes/base-bytes.base";
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
      };
    };
    base-threads = 
    {
      pname = "base-threads";
      version = "base";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-threads/base-threads.base";
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
      };
    };
    base-unix = 
    {
      pname = "base-unix";
      version = "base";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-unix/base-unix.base";
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
      };
    };
    containers = 
    {
      pname = "containers";
      version = "3.6.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/c-cube/ocaml-containers/archive/v3.6.1.tar.gz";
        sha256 = "0vizy0hq84irgzz5n97qmsm87nf2m7lyhdv1vl0wcp72wxcwfj85";
      };
      opamInputs = 
      {
        inherit (selection) seq ocaml either dune-configurator
        dune;
        base-unix = selection.base-unix or null;
        base-threads = selection.base-threads or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/containers/containers.3.6.1";
        hash = "sha256:0hr5m1zgrzz8dzngasrd2nwgngg33xksc80zg0gbnhndl7bib6lk";
      };
    };
    cppo = 
    {
      pname = "cppo";
      version = "1.6.8";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-community/cppo/archive/v1.6.8.tar.gz";
        sha256 = "0lxy4xkkkwgs1cj6d9lyzsqi9f6fc9r6cir5imi7yjqrpd86s1by";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune base-unix;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/cppo/cppo.1.6.8";
        hash = "sha256:0pzd8irqkkkpfgw8nq9d21z9rj5m3qlzixyb7ybfy4b1fwh3n8bp";
      };
    };
    csexp = 
    {
      pname = "csexp";
      version = "1.5.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.5.1/csexp-1.5.1.tbz";
        sha256 = "00mc19f89pxpmjl62862ya5kjcfrl8rjzvs00j05h2m9bw3f81fn";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/csexp/csexp.1.5.1";
        hash = "sha256:01lc95kz13gpki4xazyh6n20kv1g9inyb5myv240wl2n9v50z8fl";
      };
    };
    dune = 
    {
      pname = "dune";
      version = "2.9.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/2.9.2/dune-site-2.9.2.tbz";
        sha256 = "0ivl5r9diky8r1rfka7427kc3lh168mrz0ywdxgv8y5rgx8crrxq";
      };
      opamInputs = 
      {
        inherit (selection) base-unix
        base-threads;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
        ocaml = selection.ocaml or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dune/dune.2.9.2";
        hash = "sha256:0qzzy2kn29ww9ryl2fvhkph9lmc112yr86xn8r8s9rbaz2zfkm6x";
      };
    };
    dune-configurator = 
    {
      pname = "dune-configurator";
      version = "2.9.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/2.9.1/dune-2.9.1.tbz";
        sha256 = "09lzq04b642iy0ljp59p32lgk3q8iphjh8fkdp69q29l5frgwx5k";
      };
      opamInputs = 
      {
        inherit (selection) result ocaml dune csexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dune-configurator/dune-configurator.2.9.1";
        hash = "sha256:1aik9w82r8vbb9fsfphpb0vam68s19ggkxprnqr99ygyalp2b71j";
      };
    };
    either = 
    {
      pname = "either";
      version = "1.0.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/mirage/either/releases/download/1.0.0/either-1.0.0.tbz";
        sha256 = "112qa1zdkf4mvn6932jb2rwxdcvfm7lg2zgh2mr7pvid67ilsrxz";
      };
      opamInputs = {
                     inherit (selection) dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/either/either.1.0.0";
        hash = "sha256:1qcj3zl0hjlc4djn5q6qjiagm5xq1q1vgbshwlf4gj7h7kzx11bf";
      };
    };
    lwt = 
    {
      pname = "lwt";
      version = "5.5.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocsigen/lwt/archive/refs/tags/5.5.0.tar.gz";
        sha256 = "15gr6nhhfjyh91v9chvm6j7vnp1hhc60y3plgvcgl5yl5k7xbbj9";
      };
      opamInputs = 
      {
        inherit (selection) seq result ocplib-endian ocaml mmap
        dune-configurator dune
        cppo;
        ocaml-syntax-shims = selection.ocaml-syntax-shims or null;
        conf-libev = selection.conf-libev or null;
        base-unix = selection.base-unix or null;
        base-threads = selection.base-threads or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/lwt/lwt.5.5.0";
        hash = "sha256:0iadlycd4q93lsk07k9zaimlysgd38sj6v50dc3cb491vl0icipz";
      };
    };
    mmap = 
    {
      pname = "mmap";
      version = "1.1.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/mmap/mmap.1.1.0";
        hash = "sha256:1snhaf6mixmmb49gcin5wmbz4bfjz406mip4556lids8ajm22ibh";
      };
    };
    ocaml = 
    {
      pname = "ocaml";
      version = "4.11.2";
      src = null;
      opamInputs = 
      {
        inherit (selection)
        ocaml-config;
        ocaml-variants = selection.ocaml-variants or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml/ocaml.4.11.2";
        hash = "sha256:14clfk687d596dyhfblf9sljbk31937rrnyx2nqi7ii52qwknn5x";
      };
    };
    ocaml-base-compiler = 
    {
      pname = "ocaml-base-compiler";
      version = "4.11.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocaml/archive/4.11.2.tar.gz";
        sha256 = "02day17rxrd0vla89mxl1yac657d1hs0lxspj8sd58ygyrl2ljh4";
      };
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.11.2";
        hash = "sha256:0zaxk9ndzqf392h8arbl11qdllm0aljgahzam9ql2mq41pccpfdg";
      };
    };
    ocaml-config = 
    {
      pname = "ocaml-config";
      version = "1";
      src = null;
      opamInputs = 
      {
        ocaml-variants = selection.ocaml-variants or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-config/ocaml-config.1";
        hash = "sha256:1gc3pyhb64j8a91bgbpy9fzljpb1ps2ylgw31ldx879vdkk46nhp";
      };
    };
    ocamlbuild = 
    {
      pname = "ocamlbuild";
      version = "0.14.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
      };
      opamInputs = {
                     inherit (selection) ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
        hash = "sha256:1r5qnrcxfypzyvjvb3zd9f66kr5ldxdl3g9rsi3pb6040krqb5w7";
      };
    };
    ocamlfind = 
    {
      pname = "ocamlfind";
      version = "1.9.3";
      src = pkgs.fetchurl 
      {
        url = "http://download.camlcity.org/download/findlib-1.9.3.tar.gz";
        sha256 = "0hfcwamcvinmww59b5i4yxbf0kxyzkp5qv3d1c7ybn9q52vgq463";
      };
      opamInputs = 
      {
        inherit (selection) ocaml;
        graphics = selection.graphics or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocamlfind/ocamlfind.1.9.3";
        hash = "sha256:1wq1lkw3rpgilprlakznsxxf60mcidn3fzi3vjrgjdrnnp9hvh19";
      };
    };
    ocplib-endian = 
    {
      pname = "ocplib-endian";
      version = "1.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/OCamlPro/ocplib-endian/archive/refs/tags/1.2.tar.gz";
        sha256 = "085kskr0cxcnv2d62n3jq1r273p7giisy56zfl26mm7amvl79blp";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune cppo base-bytes;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocplib-endian/ocplib-endian.1.2";
        hash = "sha256:1jldvb471gyhkrzwfvqg722l3a8dc37hhhyas66skjzfmqyi2pnh";
      };
    };
    ounit2 = 
    {
      pname = "ounit2";
      version = "2.2.4";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/gildor478/ounit/releases/download/v2.2.4/ounit-v2.2.4.tbz";
        sha256 = "0i9kiqbf2dp12c4qcvbn4abdpdp6h4g5z54ycsh0q8jpv6jnkh5m";
      };
      opamInputs = 
      {
        inherit (selection) stdlib-shims ocaml dune base-unix base-bytes;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ounit2/ounit2.2.2.4";
        hash = "sha256:1z5dlin5x6l5s7sbgkirsxgg00pr5l4gq7bdg2287kp4mlm5vgw0";
      };
    };
    re = 
    {
      pname = "re";
      version = "1.10.3";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.10.3/re-1.10.3.tbz";
        sha256 = "1fqfg609996bgxr14yyfxhvl6hm9c1j0mm2xjdjigqrzgyb4crc4";
      };
      opamInputs = {
                     inherit (selection) seq ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/re/re.1.10.3";
        hash = "sha256:1f2xgscc07g800ia8z43i1p377dj2fjdrpzsqgzvw1dnplwnklya";
      };
    };
    redis = 
    {
      pname = "redis";
      version = "0.5";
      src = self.directSrc "redis";
      opamInputs = 
      {
        inherit (selection) uuidm re ocaml dune base-unix;
      };
      opamSrc = "redis.opam";
    };
    redis-lwt = 
    {
      pname = "redis-lwt";
      version = "0.5";
      src = self.directSrc "redis-lwt";
      opamInputs = 
      {
        inherit (selection) redis ocaml lwt dune;
      };
      opamSrc = "redis-lwt.opam";
    };
    redis-sync = 
    {
      pname = "redis-sync";
      version = "0.5";
      src = self.directSrc "redis-sync";
      opamInputs = 
      {
        inherit (selection) redis ocaml dune;
      };
      opamSrc = "redis-sync.opam";
    };
    result = 
    {
      pname = "result";
      version = "1.5";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/result/result.1.5";
        hash = "sha256:0ybmvlisfz5swvbcq855czz1ysv9zxmb79f1m0x8284hczmfm98f";
      };
    };
    seq = 
    {
      pname = "seq";
      version = "base";
      src = null;
      opamInputs = {
                     inherit (selection) ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/seq/seq.base";
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
      };
    };
    stdlib-shims = 
    {
      pname = "stdlib-shims";
      version = "0.3.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
        hash = "sha256:19g9dnaxyh2ajz6pdczdsqzzvsmfrxwx6f613inkr31jw5hrqkiz";
      };
    };
    topkg = 
    {
      pname = "topkg";
      version = "1.0.4";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/topkg/releases/topkg-1.0.4.tbz";
        sha256 = "1kzw5cxkizcvh4rgzwgpjlj9hfxfk6yr686bxx6wrbsfs8as371k";
      };
      opamInputs = 
      {
        inherit (selection) ocamlfind ocamlbuild ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/topkg/topkg.1.0.4";
        hash = "sha256:0gvngd4nayhhw02gcsljvmx6jkjpv9m3mqwpgimcfq04h0cf4knb";
      };
    };
    uuidm = 
    {
      pname = "uuidm";
      version = "0.9.7";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/uuidm/releases/uuidm-0.9.7.tbz";
        sha256 = "1ivxb3hxn9bk62rmixx6px4fvn52s4yr1bpla7rgkcn8981v45r8";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild
        ocaml;
        cmdliner = selection.cmdliner or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/uuidm/uuidm.0.9.7";
        hash = "sha256:0gczj4p886wzyjr11x4wg5qwvj6lvzb1rnhy0l9ya7z01n51bkwr";
      };
    };
  };
}

